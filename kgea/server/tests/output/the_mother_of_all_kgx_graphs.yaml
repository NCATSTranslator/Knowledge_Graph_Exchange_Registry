openapi: 3.0.1
info:
  version: 1.0.0
  title: >-
    THe Mother of all KGX graphs Knowledge Graph eXchange File Set.
  description: >-
    Detailed description of knowledge graph.
  license:
    name: "Creative-Commons-4.0"
    url:  "https://creativecommons.org/licenses/by/4.0/legalcode"
  termsOfService: ""
  contact:
    name: "Richard Bruskiewich"
    x-role: "Submitter"
    email: "richard@starinformatic.com"
  x-translator:
    component: "ARA"
    team:
    - "STAR Informatics"
  x-kge:
    version: "2021-04-02"
servers:
  - url: "https://kge.starinformatics.ca/the_mother_of_all_kgx_graphs"
    description: "KGE Archive Entry base url for THe Mother of all KGX graphs"
externalDocs:
  description: >-
    Documentation for the NCATS Biomedical Translator
    Knowledge Graph Exchange (KGE) Archive
  url: https://github.com/NCATSTranslator/Knowledge_Graph_Exchange_Registry
tags:
  - name: translator
    description: NCATS Biomedical Data Translator component API
  - name: kge
    description: Translator Knowledge Graph eXchange (KGE) File Set SmartAPI entry
  - name: provider
    description: Provider metadata for KGX-formatted data files
  - name: content
    description: Content metadata for KGX-formatted data files
paths:
  /{version}/access:
    get:
      parameters:
        - name: version
          in: path
          description: >-
            Version of the given KGE File Set
          required: true
          schema:
            type: string
      tags:
        - provider
      summary: Get KGE File Set provider metadata.
      operationId: access
      responses:
        '200':
          description: >-
            Catalog of available KGE File Set versions and their file contents.
          content:
            application/json:
              schema:
                description: >-
                  Dictionary of details about available versions for a given KGE File Set.
                type: object
                additionalProperties:
                  type: array
                  description: >-
                    List of file names and sizes for a given KGE File Set version
                  items:
                    type: object
                    properties:
                      file_name:
                        description: original name of file (as uploaded)
                        type: string
                      file_type:
                        description: designates if the file is meta-, node or edge data
                        type: string
                      file_size:
                        description: size of file in megabytes
                        type: number
                        format: float
        '404':
          description: >-
            Specified KGE File Set was not found.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR knowledge graph identifier is not just recognized.
          content:
            application/json:
              schema:
                type: string
  /{kg_version}/meta_knowledge_graph:
    get:
      parameters:
        - name: kg_version
          in: path
          description: >-
            Version of KGE File Set for a given knowledge graph.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Meta knowledge graph representation of this KGX knowledge graph.
      operationId: metaKnowledgeGraph
      responses:
        '200':
          description: >-
            Returns meta knowledge graph representation
            of this KGX knowledge graph.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaKnowledgeGraph'
        '404':
          description: >-
            KGE File Set was not found.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR KGX knowledge graph identifier is not just unrecognized.
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    BiolinkEntity:
      description: >-
        Compact URI (CURIE) for a Biolink class, biolink:NamedThing
        or a child thereof. The CURIE must use the prefix 'biolink:'
        followed by the PascalCase class name.
      type: string
      pattern: ^biolink:[A-Z][a-zA-Z]*$
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      example: biolink:PhenotypicFeature
    BiolinkPredicate:
      description: >-
        CURIE for a Biolink 'predicate' slot, taken from the Biolink slot
        ('is_a') hierarchy rooted in biolink:related_to (snake_case). This
        predicate defines the Biolink relationship between the subject and
        object nodes of a biolink:Association defining a knowledge graph edge.
      type: string
      pattern: ^biolink:[a-z][a-z_]*$
      externalDocs:
        description: Biolink model predicates
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      example: biolink:interacts_with
    MetaKnowledgeGraph:
      type: object
      description: >-
        Knowledge-map representation of this TRAPI web service.
      properties:
        nodes:
          type: object
          description: >-
            Collection of node categories provided by this TRAPI web service,
            indexed by Biolink class CURIEs.
          additionalProperties:
            $ref: '#/components/schemas/MetaNode'
        edges:
          type: array
          description: >-
            List of edges/predicates provided by this TRAPI web service.
          items:
            $ref: '#/components/schemas/MetaEdge'
          minItems: 1
    MetaNode:
      type: object
      description: >-
        Description of a node category provided by this TRAPI web service.
      properties:
        id_prefixes:
          type: array
          description: >-
            List of CURIE prefixes for the node category that this TRAPI web
            service understands and accepts on the input.
          items:
            type: string
          minItems: 1
          example: [CHEMBL.COMPOUND, INCHIKEY]
        count:
          type: integer
          description: >-
            Total number of node instances of this node category known to this
            TRAPI web service, or -1 if the number is not known.
        count_by_source:
          type: object
          description: >-
            Number of node instances by their source
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - id_prefixes
      additionalProperties: false
    MetaEdge:
      type: object
      description: >-
        Edge in a meta knowledge map describing relationship between a subject
        Biolink class and an object Biolink class.
      properties:
        subject:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Subject node category of this relationship edge.
          example: biolink:ChemicalSubstance
        predicate:
          $ref: '#/components/schemas/BiolinkPredicate'
          description: >-
            Biolink relationship between the subject and object categories.
          example: biolink:affects
        object:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Object node category of this relationship edge.
          example: biolink:Protein
        relations:
          type: array
          description: >-
            Low-level relations from the underlying source.
          items:
            type: string
          example: [inhibits, activates]
        count:
          type: integer
          description: >-
            Total number of edge instances of this (subject, predicate,
            object) triple known to this TRAPI web service, or -1 if the
            number is not known.
        count_by_source:
          type: object
          description: >-
            Number of edge instances by their source.
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - subject
        - predicate
        - object
      additionalProperties: false
