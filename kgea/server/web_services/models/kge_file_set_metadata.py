# coding: utf-8

from typing import List

from kgea.server.web_services.models.base_model_ import Model
from kgea.server.web_services.models.kge_file import KgeFile
from kgea.server.web_services.models.kge_file_set_status_code import KgeFileSetStatusCode
from kgea.server.web_services.models.meta_knowledge_graph import MetaKnowledgeGraph
from kgea.server.web_services import util


class KgeFileSetMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kg_version: str=None, submitter_name: str=None, submitter_email: str=None, status: KgeFileSetStatusCode=None, files: List[KgeFile]=None, contents: MetaKnowledgeGraph=None):
        """KgeFileSetMetadata - a model defined in OpenAPI

        :param kg_version: The kg_version of this KgeFileSetMetadata.
        :param submitter_name: The submitter_name of this KgeFileSetMetadata.
        :param submitter_email: The submitter_email of this KgeFileSetMetadata.
        :param status: The status of this KgeFileSetMetadata.
        :param files: The files of this KgeFileSetMetadata.
        :param contents: The contents of this KgeFileSetMetadata.
        """
        self.openapi_types = {
            'kg_version': str,
            'submitter_name': str,
            'submitter_email': str,
            'status': KgeFileSetStatusCode,
            'files': List[KgeFile],
            'contents': MetaKnowledgeGraph
        }

        self.attribute_map = {
            'kg_version': 'kg_version',
            'submitter_name': 'submitter_name',
            'submitter_email': 'submitter_email',
            'status': 'status',
            'files': 'files',
            'contents': 'contents'
        }

        self._kg_version = kg_version
        self._submitter_name = submitter_name
        self._submitter_email = submitter_email
        self._status = status
        self._files = files
        self._contents = contents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KgeFileSetMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KgeFileSetMetadata of this KgeFileSetMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kg_version(self):
        """Gets the kg_version of this KgeFileSetMetadata.

        Version identifier of the file set.

        :return: The kg_version of this KgeFileSetMetadata.
        :rtype: str
        """
        return self._kg_version

    @kg_version.setter
    def kg_version(self, kg_version):
        """Sets the kg_version of this KgeFileSetMetadata.

        Version identifier of the file set.

        :param kg_version: The kg_version of this KgeFileSetMetadata.
        :type kg_version: str
        """

        self._kg_version = kg_version

    @property
    def submitter_name(self):
        """Gets the submitter_name of this KgeFileSetMetadata.

        Name of the submitter of the KGE FileSet

        :return: The submitter_name of this KgeFileSetMetadata.
        :rtype: str
        """
        return self._submitter_name

    @submitter_name.setter
    def submitter_name(self, submitter_name):
        """Sets the submitter_name of this KgeFileSetMetadata.

        Name of the submitter of the KGE FileSet

        :param submitter_name: The submitter_name of this KgeFileSetMetadata.
        :type submitter_name: str
        """

        self._submitter_name = submitter_name

    @property
    def submitter_email(self):
        """Gets the submitter_email of this KgeFileSetMetadata.

        Email address for the submitter.

        :return: The submitter_email of this KgeFileSetMetadata.
        :rtype: str
        """
        return self._submitter_email

    @submitter_email.setter
    def submitter_email(self, submitter_email):
        """Sets the submitter_email of this KgeFileSetMetadata.

        Email address for the submitter.

        :param submitter_email: The submitter_email of this KgeFileSetMetadata.
        :type submitter_email: str
        """

        self._submitter_email = submitter_email

    @property
    def status(self):
        """Gets the status of this KgeFileSetMetadata.


        :return: The status of this KgeFileSetMetadata.
        :rtype: KgeFileSetStatusCode
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this KgeFileSetMetadata.


        :param status: The status of this KgeFileSetMetadata.
        :type status: KgeFileSetStatusCode
        """

        self._status = status

    @property
    def files(self):
        """Gets the files of this KgeFileSetMetadata.

        Annotated list of files within a given file set.

        :return: The files of this KgeFileSetMetadata.
        :rtype: List[KgeFile]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this KgeFileSetMetadata.

        Annotated list of files within a given file set.

        :param files: The files of this KgeFileSetMetadata.
        :type files: List[KgeFile]
        """

        self._files = files

    @property
    def contents(self):
        """Gets the contents of this KgeFileSetMetadata.


        :return: The contents of this KgeFileSetMetadata.
        :rtype: MetaKnowledgeGraph
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this KgeFileSetMetadata.


        :param contents: The contents of this KgeFileSetMetadata.
        :type contents: MetaKnowledgeGraph
        """

        self._contents = contents
