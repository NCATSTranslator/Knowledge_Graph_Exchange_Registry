# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from web_services.models.base_model_ import Model
from web_services import util


class ObjectKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_key: str=None):
        """ObjectKey - a model defined in OpenAPI

        :param object_key: The object_key of this ObjectKey.
        """
        self.openapi_types = {
            'object_key': str
        }

        self.attribute_map = {
            'object_key': 'object_key'
        }

        self._object_key = object_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ObjectKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ObjectKey of this ObjectKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_key(self):
        """Gets the object_key of this ObjectKey.

        Upload object key returned, for use in a local file upload and/or in  in progress monitoring of a local upload or a URL-specified file transfer.

        :return: The object_key of this ObjectKey.
        :rtype: str
        """
        return self._object_key

    @object_key.setter
    def object_key(self, object_key):
        """Sets the object_key of this ObjectKey.

        Upload object key returned, for use in a local file upload and/or in  in progress monitoring of a local upload or a URL-specified file transfer.

        :param object_key: The object_key of this ObjectKey.
        :type object_key: str
        """
        if object_key is None:
            raise ValueError("Invalid value for `object_key`, must not be `None`")

        self._object_key = object_key
