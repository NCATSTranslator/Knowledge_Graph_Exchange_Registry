# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from web_services.models.base_model_ import Model
from web_services import util


class UploadTokenObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, upload_token: str=None):
        """UploadTokenObject - a model defined in OpenAPI

        :param upload_token: The upload_token of this UploadTokenObject.
        """
        self.openapi_types = {
            'upload_token': str
        }

        self.attribute_map = {
            'upload_token': 'upload_token'
        }

        self._upload_token = upload_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadTokenObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadTokenObject of this UploadTokenObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def upload_token(self):
        """Gets the upload_token of this UploadTokenObject.

        Upload object key returned, for use in a local file upload and/or in  in progress monitoring of a local upload or a URL-specified file transfer.

        :return: The upload_token of this UploadTokenObject.
        :rtype: str
        """
        return self._upload_token

    @upload_token.setter
    def upload_token(self, upload_token):
        """Sets the upload_token of this UploadTokenObject.

        Upload object key returned, for use in a local file upload and/or in  in progress monitoring of a local upload or a URL-specified file transfer.

        :param upload_token: The upload_token of this UploadTokenObject.
        :type upload_token: str
        """
        if upload_token is None:
            raise ValueError("Invalid value for `upload_token`, must not be `None`")

        self._upload_token = upload_token
