openapi: 3.0.1
info:
  contact:
    email: richard.bruskiewich@delphinai.com
    name: Richard Bruskiewich
    x-role: responsible developer
    x-id: https://github.com/RichardBruskiewich
  description: OpenAPI for the NCATS Biomedical Translator Knowledge Graph Exchange
    Archive
  license:
    name: MIT 2.0
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: https://ncats.nih.gov/translator
  title: OpenAPI for the Biomedical Translator Knowledge Graph EXchange Archive. Although
    this API is SmartAPI compliant, it will not normally be visible in the Translator
    SmartAPI Registry since it is mainly meant to be accessed through Registry indexed
    KGE File Sets, which will have distinct entries in the Registry.
  version: 1.0.0-dev
  x-translator:
    component: SRI service
    team:
    - SRI
externalDocs:
  description: Documentation for the NCATS Biomedical Translator Knowledge Graph Exchange
    (KGE) Archive
  url: https://github.com/NCATSTranslator/Knowledge_Graph_Exchange_Registry
servers:
- description: Localhost URL for server, to be proxied to the real internet
  url: http://localhost:8080/archive
tags:
- description: Designates a NCATS Biomedical Data Translator component API
  name: translator
- description: Designates a Translator Knowledge Graph eXchange (KGE) Archive API
  name: kge
- description: Endpoints to access catalog of KGE file sets
  name: catalog
- description: Endpoints for KGE file set upload
  name: upload
- description: Endpoints to access version specific KGE file set content (meta-)data.
  name: content
paths:
  /catalog:
    get:
      operationId: get_knowledge_graph_catalog
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/KgeFileSetEntry'
                description: Dictionary of available KGE File Sets, with a list of
                  (at least one) version. The keys of the dictionary are the internal
                  normalized identifiers ('kg_id') of the file sets.
                type: object
          description: Catalog of available KGE File Sets, their name and their versions.
      summary: Returns the catalog of available KGE File Sets
      tags:
      - catalog
      x-openapi-router-controller: kgea.server.web_services.controllers.catalog_controller
  /publish/{kg_id}/{kg_version}:
    get:
      operationId: publish_file_set
      parameters:
      - description: KGE Knowledge Graph identifier for the knowledge graph for which
          data files are being accessed.
        explode: false
        in: path
        name: kg_id
        required: true
        schema:
          type: string
        style: simple
      - description: KGE File Set version identifier for the knowledge graph for which
          data files are being accessed.
        explode: false
        in: path
        name: kg_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "302":
          description: After KGE File Set publication is triggered, user gets redirected
            to /home.
      summary: Publish a registered File Set
      tags:
      - catalog
      x-openapi-router-controller: kgea.server.web_services.controllers.catalog_controller
  /register/fileset:
    post:
      description: Register core metadata for a newly persisted file set version of
        a KGE persisted Knowledge Graph. Since this endpoint assumes a web session
        authenticated session user, this user is automatically designated as the 'owner'
        of the new versioned file set.
      operationId: register_file_set
      requestBody:
        $ref: '#/components/requestBodies/RegisterFileSetRequestBody'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: New file set registration operation successfully completed.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema
            OR a specific parameter is believed to be invalid somehow (or not just
            recognized).
      summary: Register core metadata for a distinctly versioned file set of a KGE
        Knowledge Graph
      tags:
      - catalog
      x-openapi-router-controller: kgea.server.web_services.controllers.catalog_controller
      x-codegen-request-body-name: body
  /register/graph:
    post:
      description: Register core metadata for a new KGE persisted Knowledge Graph.
        Since this endpoint assumes assumes a web session authenticated user, this
        user is automatically designated as the 'owner' of the new KGE graph.
      operationId: register_knowledge_graph
      requestBody:
        $ref: '#/components/requestBodies/RegisterGraphRequestBody'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: New knowledge graph registration operation  successfully completed.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema
            OR a specific parameter is believed to be invalid somehow (or not just
            recognized).
      summary: Register core metadata for a distinct KGE Knowledge Graph
      tags:
      - catalog
      x-openapi-router-controller: kgea.server.web_services.controllers.catalog_controller
      x-codegen-request-body-name: body
  /upload:
    post:
      operationId: upload_file
      requestBody:
        $ref: '#/components/requestBodies/UploadRequestBody'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Upload successfully completed.
        "404":
          content:
            application/json:
              schema:
                type: string
          description: KGE File Set is unknown (not registered).
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema
            OR a specific parameter is believed to be invalid somehow (or not just
            recognized).
      summary: Upload processing of KGE File Set file
      tags:
      - upload
      x-openapi-router-controller: kgea.server.web_services.controllers.upload_controller
      x-codegen-request-body-name: body
  /{kg_id}/{kg_version}/contents:
    get:
      operationId: get_file_set_contents
      parameters:
      - description: KGE File Set identifier for the knowledge graph for which data
          file metadata are being accessed
        explode: false
        in: path
        name: kg_id
        required: true
        schema:
          type: string
        style: simple
      - description: Specific version of KGE File Set for the knowledge graph for
          which data file metadata are being accessed
        explode: false
        in: path
        name: kg_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KgeFileSetStatus'
          description: Annotated list of files of for a given version of a specified
            KGE File Set.
        "404":
          content:
            application/json:
              schema:
                type: string
          description: Specified KGE File Set was not found.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema.
      summary: Get file list and details for a specified KGE File Set version.
      tags:
      - content
      x-openapi-router-controller: kgea.server.web_services.controllers.content_controller
  /{kg_id}/{kg_version}/download:
    get:
      operationId: download_file_set
      parameters:
      - description: KGE File Set identifier for the knowledge graph being accessed.
        explode: false
        in: path
        name: kg_id
        required: true
        schema:
          type: string
        style: simple
      - description: Version of KGE File Set of the knowledge graph being accessed.
        explode: false
        in: path
        name: kg_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/gzip:
              schema:
                format: binary
                type: string
          description: A KGE File Set as a gzip compressed tar archive of KGX compliant
            files plus an associated metadata json file
        "404":
          content:
            application/json:
              schema:
                type: string
          description: KGE File Set or its requested version was not found.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema
      summary: Returns specified KGE File Set as a gzip compressed tar archive
      tags:
      - content
      x-openapi-router-controller: kgea.server.web_services.controllers.content_controller
  /{kg_id}/{kg_version}/meta_knowledge_graph:
    get:
      operationId: meta_knowledge_graph
      parameters:
      - description: KGE File Set identifier for the knowledge graph for which graph
          metadata is being accessed.
        explode: false
        in: path
        name: kg_id
        required: true
        schema:
          type: string
        style: simple
      - description: Version of KGE File Set for a given knowledge graph.
        explode: false
        in: path
        name: kg_version
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaKnowledgeGraph'
          description: Returns meta knowledge graph representation of this KGX knowledge
            graph.
        "404":
          content:
            application/json:
              schema:
                type: string
          description: KGE File Set or its requested version was not found.
        "400":
          content:
            application/json:
              schema:
                type: string
          description: Bad request. Request is invalid according to this OpenAPI schema
      summary: Meta knowledge graph representation of this KGX knowledge graph.
      tags:
      - content
      x-openapi-router-controller: kgea.server.web_services.controllers.content_controller
components:
  requestBodies:
    RegisterGraphRequestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RegisterGraphRequestBody'
      required: true
    RegisterFileSetRequestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RegisterFileSetRequestBody'
      required: true
    UploadRequestBody:
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/UploadRequestBody'
      required: true
  schemas:
    KgeFileSetEntry:
      description: Basic KGE Archive catalog entry indexing a KGE File Set.
      properties:
        name:
          description: Human readable KGE File Set name ('kg_name')
          example: Semantic Medline Database
          title: name
          type: string
        versions:
          description: List of versions ('kg_version') of a KGE File Set
          example:
          - "4.1"
          - "4.2"
          - "4.3"
          items:
            type: string
          minItems: 1
          title: versions
          type: array
      title: KgeFileSetEntry
      type: object
    KgeFileSetStatus:
      description: KGE File Set Status including inventory of associated files.
      example:
        files:
        - kgx_compliance_status: kgx_compliance_status
          file_type: file_type
          original_name: original_name
          assigned_name: assigned_name
          file_size: 0.8008282
          errors:
          - errors
          - errors
        - kgx_compliance_status: kgx_compliance_status
          file_type: file_type
          original_name: original_name
          assigned_name: assigned_name
          file_size: 0.8008282
          errors:
          - errors
          - errors
        kg_id: semmeddb
        kg_version: "1.0"
      properties:
        kg_id:
          description: Identifier of the knowledge graph that owns the file set.
          example: semmeddb
          title: kg_id
          type: string
        kg_version:
          description: Version identifier of the file set.
          example: "1.0"
          title: kg_version
          type: string
        status:
          $ref: '#/components/schemas/KgeFileSetStatusCode'
        files:
          description: Annotated list of files within a given file set.
          items:
            $ref: '#/components/schemas/KgeFile'
          title: files
          type: array
      title: KgeFileSetStatus
      type: object
    KgeFileSetStatusCode:
      description: Version identifier of the file set.
      enum:
      - Created
      - Loaded
      - Processing
      - Validated
      - Error
      title: KgeFileSetStatusCode
      type: string
    KgeFile:
      additionalProperties: false
      description: Annotated file in a KGE File Set.
      example:
        kgx_compliance_status: kgx_compliance_status
        file_type: file_type
        original_name: original_name
        assigned_name: assigned_name
        file_size: 0.8008282
        errors:
        - errors
        - errors
      properties:
        original_name:
          description: original name of file (as uploaded)
          title: original_name
          type: string
        assigned_name:
          description: assigned name of file (by archive, for export)
          title: assigned_name
          type: string
        file_type:
          description: Designates if the file is (content or file set) meta-, node
            or edge data
          title: file_type
          type: string
        file_size:
          description: size of file in megabytes
          format: float
          title: file_size
          type: number
        kgx_compliance_status:
          description: one of 'assessing', 'compliant' or 'non-compliant'
          title: kgx_compliance_status
          type: string
        errors:
          description: if 'non-compliant' file, list of error messags
          items:
            type: string
          title: errors
          type: array
      required:
      - assigned_name
      - file_size
      - file_type
      - kgx_compliance_status
      - original_name
      title: KgeFile
      type: object
    BiolinkEntity:
      description: Compact URI (CURIE) for a Biolink class, biolink:NamedThing or
        a child thereof. The CURIE must use the prefix 'biolink:' followed by the
        PascalCase class name.
      example: biolink:PhenotypicFeature
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      pattern: ^biolink:[A-Z][a-zA-Z]*$
      title: BiolinkEntity
      type: string
    BiolinkPredicate:
      description: CURIE for a Biolink 'predicate' slot, taken from the Biolink slot
        ('is_a') hierarchy rooted in biolink:related_to (snake_case). This predicate
        defines the Biolink relationship between the subject and object nodes of a
        biolink:Association defining a knowledge graph edge.
      example: biolink:interacts_with
      externalDocs:
        description: Biolink model predicates
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      pattern: ^biolink:[a-z][a-z_]*$
      title: BiolinkPredicate
      type: string
    MetaKnowledgeGraph:
      description: Knowledge-map representation of this KGX knowledge graph.
      example:
        nodes:
          key:
            id_prefixes:
            - CHEMBL.COMPOUND
            - INCHIKEY
            count: 0
            count_by_source:
              ChEMBL: 1234
        edges:
        - predicate: biolink:interacts_with
          subject: biolink:PhenotypicFeature
          count: 6
          relations:
          - inhibits
          - activates
          count_by_source:
            ChEMBL: 1234
          object: biolink:PhenotypicFeature
        - predicate: biolink:interacts_with
          subject: biolink:PhenotypicFeature
          count: 6
          relations:
          - inhibits
          - activates
          count_by_source:
            ChEMBL: 1234
          object: biolink:PhenotypicFeature
      properties:
        nodes:
          additionalProperties:
            $ref: '#/components/schemas/MetaNode'
          description: Collection of node categories provided by this KGX knowledge
            graph, indexed by Biolink class CURIEs.
          title: nodes
          type: object
        edges:
          description: List of edges/predicates provided by this KGX knowledge graph.
          items:
            $ref: '#/components/schemas/MetaEdge'
          minItems: 1
          title: edges
          type: array
      title: MetaKnowledgeGraph
      type: object
    MetaNode:
      additionalProperties: false
      description: Description of a node category provided by this KGX knowledge graph.
      example:
        id_prefixes:
        - CHEMBL.COMPOUND
        - INCHIKEY
        count: 0
        count_by_source:
          ChEMBL: 1234
      properties:
        id_prefixes:
          description: List of CURIE prefixes for the node category that this TRAPI
            web service understands and accepts on the input.
          example:
          - CHEMBL.COMPOUND
          - INCHIKEY
          items:
            type: string
          minItems: 1
          title: id_prefixes
          type: array
        count:
          description: Total number of node instances of this node category known
            to this KGX knowledge graph, or -1 if the number is not known.
          title: count
          type: integer
        count_by_source:
          additionalProperties:
            type: integer
          description: Number of node instances by their source
          example:
            ChEMBL: 1234
          title: count_by_source
          type: object
      required:
      - id_prefixes
      title: MetaNode
      type: object
    MetaEdge:
      additionalProperties: false
      description: Edge in a meta knowledge map describing relationship between a
        subject Biolink class and an object Biolink class.
      example:
        predicate: biolink:interacts_with
        subject: biolink:PhenotypicFeature
        count: 6
        relations:
        - inhibits
        - activates
        count_by_source:
          ChEMBL: 1234
        object: biolink:PhenotypicFeature
      properties:
        subject:
          description: Compact URI (CURIE) for a Biolink class, biolink:NamedThing
            or a child thereof. The CURIE must use the prefix 'biolink:' followed
            by the PascalCase class name.
          example: biolink:PhenotypicFeature
          externalDocs:
            description: Biolink model entities
            url: https://biolink.github.io/biolink-model/docs/NamedThing.html
          pattern: ^biolink:[A-Z][a-zA-Z]*$
          title: BiolinkEntity
          type: string
        predicate:
          description: CURIE for a Biolink 'predicate' slot, taken from the Biolink
            slot ('is_a') hierarchy rooted in biolink:related_to (snake_case). This
            predicate defines the Biolink relationship between the subject and object
            nodes of a biolink:Association defining a knowledge graph edge.
          example: biolink:interacts_with
          externalDocs:
            description: Biolink model predicates
            url: https://biolink.github.io/biolink-model/docs/related_to.html
          pattern: ^biolink:[a-z][a-z_]*$
          title: BiolinkPredicate
          type: string
        object:
          description: Compact URI (CURIE) for a Biolink class, biolink:NamedThing
            or a child thereof. The CURIE must use the prefix 'biolink:' followed
            by the PascalCase class name.
          example: biolink:PhenotypicFeature
          externalDocs:
            description: Biolink model entities
            url: https://biolink.github.io/biolink-model/docs/NamedThing.html
          pattern: ^biolink:[A-Z][a-zA-Z]*$
          title: BiolinkEntity
          type: string
        relations:
          description: Low-level relations from the underlying source.
          example:
          - inhibits
          - activates
          items:
            type: string
          title: relations
          type: array
        count:
          description: Total number of edge instances of this (subject, predicate,
            object) triple known to this KGX knowledge graph, or -1 if the number
            is not known.
          title: count
          type: integer
        count_by_source:
          additionalProperties:
            type: integer
          description: Number of edge instances by their source.
          example:
            ChEMBL: 1234
          title: count_by_source
          type: object
      required:
      - object
      - predicate
      - subject
      title: MetaEdge
      type: object
    RegisterGraphRequestBody:
      description: KGE Knowledge Graph registration metadata.
      properties:
        translator_component:
          type: string
        translator_team:
          type: string
        kg_name:
          type: string
        kg_description:
          type: string
        license_name:
          type: string
        license_url:
          type: string
        terms_of_service:
          type: string
      required:
      - kg_name
      - translator_component
      - translator_team
      type: object
    RegisterFileSetRequestBody:
      description: Versioned KGE File Set registration metadata.
      properties:
        kg_id:
          type: string
        kg_major_version:
          type: integer
        kg_minor_version:
          type: integer
        kg_date_stamp:
          format: date
          type: string
      required:
      - kg_id
      - kg_major_version
      - kg_minor_version
      type: object
    UploadRequestBody:
      description: Uploading form posting of (meta-)data files to a specific KGE File
        Set version, belonging to a specific Knowledge Graph. The 'upload_mode' argument
        specifies the category and/or mode as one of 'metadata', 'content_from_local_file'
        or 'content_from_url'. If 'metadata' or 'content_from_local_file' are indicated,
        then the 'uploaded_file' parameter should be set to the file to be uploaded.
        If 'upload_mode' is set to 'content_from_url' then the 'content_url' parameter
        is taken as a REST endpoint of the file to be transferred into the Archive
        (authentication not yet supported - URL should provide unauthenticated access).
        The 'content_name' should be set either to the file name of the 'metadata'
        or 'content_from_local_file', or url transfers, set by inference or as specified
        by the caller (especially if the 'content_url' doesn't resolve to a definitive
        file name). The specific KGX file content of the current upload file is set
        by the `kgx_file_content' for KGX data files uploaded in the 'content_from_local_file'
        or 'content_from_url' modes set by the selected 'nodes' versus 'edges' radio
        button.
      properties:
        kg_id:
          type: string
        kg_version:
          type: string
        kgx_file_content:
          type: string
        upload_mode:
          type: string
        content_name:
          type: string
        content_url:
          type: string
        uploaded_file:
          format: binary
          type: string
      required:
      - content_name
      - kg_id
      - kg_version
      - kgx_file_content
      - upload_mode
      type: object
