# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, submitter=None, kg_name=None, data_file_name=None, metadata_file_name=None):  # noqa: E501
        """User - a model defined in OpenAPI

        :param submitter: The submitter of this User.  # noqa: E501
        :type submitter: str
        :param kg_name: The kg_name of this User.  # noqa: E501
        :type kg_name: str
        :param data_file_name: The data_file_name of this User.  # noqa: E501
        :type data_file_name: str
        :param metadata_file_name: The metadata_file_name of this User.  # noqa: E501
        :type metadata_file_name: str
        """
        self.openapi_types = {
            'submitter': str,
            'kg_name': str,
            'data_file_name': str,
            'metadata_file_name': str
        }

        self.attribute_map = {
            'submitter': 'submitter',
            'kg_name': 'kg_name',
            'data_file_name': 'data_file_name',
            'metadata_file_name': 'metadata_file_name'
        }

        self._submitter = submitter
        self._kg_name = kg_name
        self._data_file_name = data_file_name
        self._metadata_file_name = metadata_file_name

    @classmethod
    def from_dict(cls, dikt) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The User of this User.  # noqa: E501
        :rtype: User
        """
        return util.deserialize_model(dikt, cls)

    @property
    def submitter(self):
        """Gets the submitter of this User.


        :return: The submitter of this User.
        :rtype: str
        """
        return self._submitter

    @submitter.setter
    def submitter(self, submitter):
        """Sets the submitter of this User.


        :param submitter: The submitter of this User.
        :type submitter: str
        """
        if submitter is None:
            raise ValueError("Invalid value for `submitter`, must not be `None`")  # noqa: E501

        self._submitter = submitter

    @property
    def kg_name(self):
        """Gets the kg_name of this User.


        :return: The kg_name of this User.
        :rtype: str
        """
        return self._kg_name

    @kg_name.setter
    def kg_name(self, kg_name):
        """Sets the kg_name of this User.


        :param kg_name: The kg_name of this User.
        :type kg_name: str
        """
        if kg_name is None:
            raise ValueError("Invalid value for `kg_name`, must not be `None`")  # noqa: E501

        self._kg_name = kg_name

    @property
    def data_file_name(self):
        """Gets the data_file_name of this User.


        :return: The data_file_name of this User.
        :rtype: str
        """
        return self._data_file_name

    @data_file_name.setter
    def data_file_name(self, data_file_name):
        """Sets the data_file_name of this User.


        :param data_file_name: The data_file_name of this User.
        :type data_file_name: str
        """
        if data_file_name is None:
            raise ValueError("Invalid value for `data_file_name`, must not be `None`")  # noqa: E501

        self._data_file_name = data_file_name

    @property
    def metadata_file_name(self):
        """Gets the metadata_file_name of this User.


        :return: The metadata_file_name of this User.
        :rtype: str
        """
        return self._metadata_file_name

    @metadata_file_name.setter
    def metadata_file_name(self, metadata_file_name):
        """Sets the metadata_file_name of this User.


        :param metadata_file_name: The metadata_file_name of this User.
        :type metadata_file_name: str
        """

        self._metadata_file_name = metadata_file_name
