openapi: 3.0.1
info:
  version: 1.5.0
  title: >-
    OpenAPI for the Biomedical Translator Knowledge Graph EXchange Archive.
    Although this API is SmartAPI compliant, it will not normally be visible
    in the Translator SmartAPI Registry since it is mainly meant to be
    accessed through Registry indexed KGE File Sets, which will have
    distinct entries in the Registry.
  description: >-
    OpenAPI for the NCATS Biomedical Translator
    Knowledge Graph Exchange Archive
  license:
    name: MIT 2.0
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: https://ncats.nih.gov/translator
  contact:
    name: "Richard Bruskiewich"
    x-role: "responsible developer"
    email: "richard.bruskiewich@delphinai.com"
    x-id: "https://github.com/RichardBruskiewich"
  x-translator:
    component: "SRI service"
    team:
    - "SRI"
servers:
  - url: "http://localhost:8080/archiver"
    description: "Localhost URL for server, to be proxied to the real internet"
externalDocs:
  description: >-
    Documentation for the NCATS Biomedical Translator
    Knowledge Graph Exchange (KGE) Archive
  url: "https://github.com/NCATSTranslator/Knowledge_Graph_Exchange_Registry"
tags:
  - name: translator
    description: Designates a NCATS Biomedical Data Translator component API
  - name: kge
    description: Designates a Translator Knowledge Graph eXchange (KGE) Archive API
  - name: catalog
    description: Endpoints to access catalog of KGE file sets
  - name: upload
    description: Endpoints for KGE file set upload
  - name: content
    description: Endpoints to access version specific KGE file set content (meta-)data.
paths:
  /catalog:
    get:
      tags:
      - catalog
      summary: Returns the catalog of available KGE File Sets
      operationId: get_knowledge_graph_catalog
      responses:
        '200':
          description: >-
            Catalog of available KGE File Sets, their name and their versions.
          content:
            application/json:
              schema:
                description: >-
                  Dictionary of available KGE File Sets, with a list of
                  (at least one) version. The keys of the dictionary are the
                  internal normalized identifiers ('kg_id') of the file sets.
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/KgeFileSetEntry'
  /register/graph:
    post:
      description: >-
        Register core metadata for a new KGE persisted Knowledge Graph. Since
        this endpoint assumes assumes a web session authenticated user, this
        user is automatically designated as the 'owner' of the new KGE graph.
      tags:
        - catalog
      summary: Register core metadata for a distinct KGE Knowledge Graph
      operationId: register_knowledge_graph
      requestBody:
        $ref: '#/components/requestBodies/RegisterGraphRequestBody'
      responses:
        '201':
          description: New knowledge graph registration operation  successfully completed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid somehow
            (or not just recognized).
          content:
            application/json:
              schema:
                type: string
  /register/fileset:
    post:
      description: >-
        Register core metadata for a newly persisted file set version of a
        KGE persisted Knowledge Graph. Since this endpoint assumes a web
        session authenticated session user, this user is automatically
        designated as the 'owner' of the new versioned file set.
      tags:
        - catalog
      summary: Register core metadata for a distinctly versioned file set of a KGE Knowledge Graph
      operationId: register_file_set
      requestBody:
        $ref: '#/components/requestBodies/RegisterFileSetRequestBody'
      responses:
        '201':
          description: New file set registration operation successfully completed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid
            somehow (or not just recognized).
          content:
            application/json:
              schema:
                type: string
  /publish/{kg_id}/{fileset_version}:
    get:
      parameters:
      - name: kg_id
        in: path
        description: >-
          KGE Knowledge Graph identifier for the knowledge graph
          for which data files are being accessed.
        required: true
        schema:
          type: string
      - name: fileset_version
        in: path
        description: >-
          KGE File Set version identifier for the knowledge graph
          for which data files are being accessed.
        required: true
        schema:
          type: string
      tags:
      - catalog
      summary: Publish a registered File Set
      operationId: publish_file_set
      responses:
        '302':
          description: >-
            After KGE File Set publication is triggered, user gets redirected to /home.
  /upload:
    get:
      description: >-
        Uploading of (meta-)data files to a specific KGE File Set version,
        belonging to a specified Knowledge Graph. The files are assumed to
        be html form file "blob" objects. The 'get' only sets up the file
        uploading (with progress indications). A follow-up HTTP POST call
        to the /upload endpoint is expected, with the 'upload token' returned
        from this call and an 'uploaded_file' parameter set to the file to be
        uploaded.  The 'content_name' should be set either to the file name.
        The specific KGX file content of the current upload file is
        set by the `kgx_file_content' for KGX data files uploaded as set
        by the selected 'metadata', 'nodes' or 'edges' radio button.
      parameters:
        - name: kg_id
          in: query
          description: >-
            KGE File Set identifier for the knowledge graph
            for which data file metadata are being accessed
          required: true
          schema:
            type: string
        - name: fileset_version
          in: query
          description: >-
            Specific version of KGE File Set for the knowledge graph
            for which data file metadata are being accessed
          required: true
          schema:
            type: string
        - name: kgx_file_content
          in: query
          description: >-
            Tags the upload as either 'metadata', 'nodes', 'edges' or 'archive'.
          required: true
          schema:
            type: string
        - name: content_name
          in: query
          description: >-
            The file name of the data set to be uploaded.
          required: true
          schema:
            type: string
      tags:
        - upload
      summary: Configure form upload context for a specific file of a KGE File Set.
      operationId: setup_upload_context
      responses:
        '200':
          description: >-
            Upload configuration successful, returning associated object key.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadTokenObject'
        '404':
          description: >-
            Knowledge graph or KGE File Set version is unknown (not registered).
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - upload
      summary: Uploading of a specified file from a local computer.
      operationId: upload_file
      requestBody:
        $ref: '#/components/requestBodies/UploadRequestBody'
      responses:
        '201':
          description: Upload successfully completed.
          content:
            application/json:
              schema:
                type: string
        '404':
          description: >-
           Knowledge graph or requested KGE File Set version is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /upload/url:
    get:
      description: >-
        Direct file from URL transfer of (meta-)data files to a specific
        KGE File Set version, belonging to a specific Knowledge Graph. The
        'content_url' parameter is taken as a REST endpoint of a file to be
        transferred into the Archive (http authentication not yet supported,
        therefore, the URL should provide for unauthenticated access). The
        'content_name' is set the file name to be assigned to the file within
        the KGE Archive. The specific KGX file content of the current upload
        file is set by the `kgx_file_content' for KGX data files uploaded as
        set by the selected 'metadata', 'nodes' or 'edges' radio button.
      parameters:
        - name: kg_id
          in: query
          description: >-
            KGE File Set identifier for the knowledge graph
            for which data file metadata are being accessed
          required: true
          schema:
            type: string
        - name: fileset_version
          in: query
          description: >-
            Specific version of KGE File Set for the knowledge graph
            for which data file metadata are being accessed
          required: true
          schema:
            type: string
        - name: kgx_file_content
          in: query
          description: >-
            Tags the upload as either 'metadata', 'nodes', 'edges' or 'archive'.
          required: true
          schema:
            type: string
        - name: content_url
          in: query
          description: >-
            (Optional) URL to a web based file resource to be
            directly uploaded to the KGE Archive from it's server.
          required: true
          schema:
            type: string
        - name: content_name
          in: query
          description: >-
            The file name of the data set to be uploaded.
          required: true
          schema:
            type: string
      tags:
        - upload
      summary: Trigger direct URL file transfer of a specific file of a KGE File Set.
      operationId: transfer_from_url
      responses:
        '200':
          description: >-
            Transfer initiated successfully, returning associated object key.
            Note that the transfer itself may not yet be completed (especially
            if it is a huge file) so the associated archive may not yet be
            accessible for downloading.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadTokenObject'
        '404':
          description: >-
            Knowledge graph or KGE File Set version is unknown (not registered).
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /upload/progress:
    get:
      description: >-
        Poll the status of a given upload process.
      parameters:
        - name: upload_token
          in: query
          description: >-
            Upload token associated with a given file for uploading to
            the Archive as specified by a preceding /upload GET call.
          required: true
          schema:
            type: string
      tags:
        - upload
      summary: Get the progress of uploading for a specific file of a KGE File Set.
      operationId: get_upload_status
      responses:
        '200':
          description: Details about the status of a file upload operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadProgressToken'
        '404':
          description: >-
            Specified upload token is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /upload/cancel:
    delete:
      description: >-
        Cancel a given upload process identified by upload token.
      parameters:
        - name: upload_token
          in: query
          description: >-
            Upload token associated with a given file whose uploading is to be cancelled.
          required: true
          schema:
            type: string
      tags:
        - upload
      summary: Cancel uploading of a specific file of a KGE File Set.
      operationId: cancel_upload
      responses:
        '204':
          description: Success of the upload cancellation (nothing returned)
        '404':
          description: >-
            Specified upload token is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{fileset_version}/metadata:
    get:
      parameters:
      - name: kg_id
        in: path
        description: >-
          KGE File Set identifier for the knowledge graph
          for which data file metadata are being accessed
        required: true
        schema:
          type: string
      - name: fileset_version
        in: path
        description: >-
          Specific version of KGE File Set for the knowledge graph
          for which data file metadata are being accessed
        required: true
        schema:
          type: string
      tags:
        - content
      summary: Get provider and content metadata for a specified KGE File Set version.
      operationId: get_file_set_metadata
      responses:
        '200':
          description: >-
            Provider and content metadata relating to the given version of a specified KGE File Set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KgeMetadata'
        '404':
          description: >-
            Knowledge graph or requested KGE File Set version is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{fileset_version}/meta_knowledge_graph:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            KGE File Set identifier for the knowledge graph
            for which graph metadata is being accessed.
          required: true
          schema:
            type: string
        - name: fileset_version
          in: path
          description: >-
            Version of KGE File Set for a given knowledge graph.
          required: true
          schema:
            type: string
        - name: downloading
          in: query
          description: >-
            Boolean flag indicating whether data is to be downloaded as an
            attachment or rather if a signed URL (string) is to be returned
            to the caller, for direct access to the data file (default: true).
          required: false
          schema:
            type: boolean
      tags:
        - content
      summary: Meta knowledge graph representation of this KGX knowledge graph.
      operationId: meta_knowledge_graph
      responses:
        '200':
          description: >-
            Returns meta knowledge graph representation
            of this KGX knowledge graph.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaKnowledgeGraph'
        '404':
          description: >-
            Knowledge graph or requested KGE File Set version is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{fileset_version}/download:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            Identifier of the knowledge graph of the KGE File Set a file set version for which is being accessed.
          required: true
          schema:
            type: string
        - name: fileset_version
          in: path
          description: >-
            Version of file set of the knowledge graph being accessed.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Returns specified KGE File Set as a gzip compressed tar archive
      operationId: download_file_set_archive
      responses:
        '200':
          description: >-
            A KGE File Set as a gzip compressed tar archive of
            KGX compliant files plus an associated metadata json file
          content:
            application/gzip:
              schema:
                type: string
                format: binary
        '404':
          description: >-
            Knowledge graph or requested KGE File Set version is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{fileset_version}/sha1hash:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            Identifier of the knowledge graph of the KGE File Set a file set version for which is being accessed.
          required: true
          schema:
            type: string
        - name: fileset_version
          in: path
          description: >-
            Version of file set of the knowledge graph being accessed.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Returns SHA1 hash of the current KGE File Set as a small text file.
      operationId: download_file_set_archive_sha1hash
      responses:
        '200':
          description: >-
            A small text file containing the SHA1 hash of its associated
            KGE File Set gzip compressed tar archive.
          content:
            application/gzip:
              schema:
                type: string
                format: binary
        '404':
          description: >-
            Knowledge graph or requested KGE File Set version is unknown.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this
            OpenAPI schema OR a specific parameter is believed
            to be invalid somehow (or just not recognized).
          content:
            application/json:
              schema:
                type: string
components:
  requestBodies:
    RegisterGraphRequestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RegisterGraphRequestBody'
      required: true
    RegisterFileSetRequestBody:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/RegisterFileSetRequestBody'
      required: true
    UploadRequestBody:
      description: KGE File Set metadata or data file submitted
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/UploadRequestBody'
      required: true
  schemas:
    KgeFileSetEntry:
      description: >-
        Basic KGE Archive catalog entry indexing a KGE File Set.
      type: object
      properties:
        name:
          description: Human readable KGE File Set name ('kg_name')
          type: string
          example: "Semantic Medline Database"
        versions:
          description: List of versions ('fileset_version') of a KGE File Set
          type: array
          items:
            type: string
          minItems: 1
          example: ["4.1", "4.2", "4.3"]
    KgeMetadata:
      description: >-
        KGE File Set provider and content metadata,
        including the inventory of associated files.
      type: object
      properties:
        provider:
          $ref: '#/components/schemas/KgeProviderMetadata'
        fileset:
          $ref: '#/components/schemas/KgeFileSetMetadata'
    KgeProviderMetadata:
      description: >-
        KGE File Set provider and content metadata,
        including the inventory of associated files.
      type: object
      properties:
        kg_id:
          description: >-
            Identifier of the knowledge graph that the metadata describes.
          type: string
          example: "semantic_medline_database"
        kg_name:
          description: >-
            Semantic Medline Database.
          type: string
          example: "Semantic Medline Database"
        kg_description:
          description: >-
            Identifier of the knowledge graph that the metadata describes.
          type: string
          example: "Curated Biolink Model-compliant knowledge graph subset of the Semantic Medline Database"
        translator_component:
          description: >-
            Type of Translator component generating the knowledge graph (i.e. KP, ARA, SRI).
          type: string
          example: "KP"
        translator_team:
          description: >-
            Translator team providing the knowledge graph data.
          type: string
          example: "RENCI"
        submitter_name:
          description: >-
            Name of the submitter/owner of the knowledge graph provider
          type: string
          example: "John Smith"
        submitter_email:
          description: >-
            Email address for the submitter/owner of the knowledge graph provider.
          type: string
          example: "jsmith@knowledge.org"
        license_name:
          description: >-
            Name of Knowledge Graph data use license.
          type: string
          example: "Creative-Commons-4.0"
        license_url:
          description: >-
            URL to Knowledge Graph license data use description.
          type: string
          example: "https://creativecommons.org/licenses/by/4.0/legalcode"
        terms_of_service:
          description: >-
            URL to Knowledge Graph data use "terms of service".
          type: string
          example: "https://ncats.nih.gov/translator"
    KgeFileSetMetadata:
      description: >-
        Metadata including content metadata and the inventory of
        associated files, for a specific version of KGE File Set.
      type: object
      properties:
        biolink_model_release:
          description: >-
            Biolink Model released associated with the file set.
          type: string
          example: "2.0.2"
        fileset_version:
          description: >-
            Version identifier of the file set.
          type: string
          example: "1.0"
        date_stamp:
          description: >-
            Date stamp of the file set.
          type: string
          format: date
        submitter_name:
          description: >-
            Name of the submitter of the KGE FileSet
          type: string
          example: "John Smith"
        submitter_email:
          description: >-
            Email address for the submitter.
          type: string
          example: "jsmith@knowledge.org"
        status:
          $ref: '#/components/schemas/KgeFileSetStatusCode'
        files:
          description: >-
            Annotated list of files within a given file set.
          type: array
          items:
            $ref: '#/components/schemas/KgeFile'
        size:
          description: approximate aggregate size of data files in the file set (megabytes)
          type: number
          format: float
        contents:
          $ref: '#/components/schemas/MetaKnowledgeGraph'
    KgeUploadProgressStatusCode:
      description: >-
        Code for status of upload or direct URL
        transfer progress for a given file.
      type: string
      enum:
        - Ongoing
        - Completed
        - Error
      example: 'Completed'
    KgeFileSetStatusCode:
      description: >-
        Code for status of processing for a KGE File Set.
      type: string
      enum:
        - Created
        - Loaded
        - Processing
        - Validated
        - Error
      example: 'Validated'
    KgeFile:
      description: >-
        Annotated file in a KGE File Set.
      type: object
      properties:
        original_name:
          description: original name of file (as uploaded)
          type: string
        assigned_name:
          description: assigned name of file (by archive, for export)
          type: string
        file_type:
          description: >-
            Designates if the file is (content or file set) meta-, node or edge data
          type: string
        file_size:
          description: size of file in megabytes
          type: number
          format: float
        kgx_compliance_status:
          $ref: '#/components/schemas/KgxCompliance'
        errors:
          description: if 'non-compliant' file, list of error messages
          type: array
          items:
            type: string
      required:
        - original_name
        - assigned_name
        - file_type
        - file_size
        - kgx_compliance_status
      additionalProperties: false
    KgxCompliance:
      description: >-
        KGX compliance status of a specific KGE File.
      type: string
      enum:
        - Assessing
        - Compliant
        - Non-Compliant
      example: 'Compliant'
    UploadTokenObject:
      description: >-
        Upload token associated with a file for uploading into a KGE File Set.
      type: object
      properties:
        upload_token:
          description: >-
            Upload object key returned, for use in a local file
            upload and/or in  in progress monitoring of a local
            upload or a URL-specified file transfer.
          type: string
      required:
        - upload_token
      additionalProperties: false
    UploadProgressToken:
      description: >-
        Token tracking the upload progress of a file into a KGE File Set.
      type: object
      properties:
        upload_token:
          description: >-
            Upload token associated with a given uploading file.
          type: string
        status:
          description: >-
            Code for status of upload or direct URL
            transfer progress for a given file.
          $ref: '#/components/schemas/KgeUploadProgressStatusCode'
        current_position:
          description: >-
            Number of bytes uploaded so far.
          type: integer
        end_position:
          description: >-
            Total expected bytes to be uploaded.
          type: integer
      required:
        - upload_token
        - status
        - current_position
        - end_position
      additionalProperties: false
    BiolinkEntity:
      description: >-
        Compact URI (CURIE) for a Biolink class, biolink:NamedThing
        or a child thereof. The CURIE must use the prefix 'biolink:'
        followed by the PascalCase class name.
      type: string
      pattern: ^biolink:[A-Z][a-zA-Z]*$
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      example: biolink:PhenotypicFeature
    BiolinkPredicate:
      description: >-
        CURIE for a Biolink 'predicate' slot, taken from the Biolink slot
        ('is_a') hierarchy rooted in biolink:related_to (snake_case). This
        predicate defines the Biolink relationship between the subject and
        object nodes of a biolink:Association defining a knowledge graph edge.
      type: string
      pattern: ^biolink:[a-z][a-z_]*$
      externalDocs:
        description: Biolink model predicates
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      example: biolink:interacts_with
    MetaKnowledgeGraph:
      type: object
      description: >-
        Knowledge-map representation of this KGX knowledge graph.
      properties:
        nodes:
          type: object
          description: >-
            Collection of node categories provided by this KGX knowledge graph,
            indexed by Biolink class CURIEs.
          additionalProperties:
            $ref: '#/components/schemas/MetaNode'
        edges:
          type: array
          description: >-
            List of edges/predicates provided by this KGX knowledge graph.
          items:
            $ref: '#/components/schemas/MetaEdge'
          minItems: 1
    MetaNode:
      type: object
      description: >-
        Description of a node category provided by this KGX knowledge graph.
      properties:
        id_prefixes:
          type: array
          description: >-
            List of CURIE prefixes for the node category that this TRAPI web
            service understands and accepts on the input.
          items:
            type: string
          minItems: 1
          example: [CHEMBL.COMPOUND, INCHIKEY]
        count:
          type: integer
          description: >-
            Total number of node instances of this node category known to this
            KGX knowledge graph, or -1 if the number is not known.
        count_by_source:
          type: object
          description: >-
            Number of node instances by their source
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - id_prefixes
      additionalProperties: false
    MetaEdge:
      type: object
      description: >-
        Edge in a meta knowledge map describing relationship between a subject
        Biolink class and an object Biolink class.
      properties:
        subject:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Subject node category of this relationship edge.
          example: biolink:ChemicalSubstance
        predicate:
          $ref: '#/components/schemas/BiolinkPredicate'
          description: >-
            Biolink relationship between the subject and object categories.
          example: biolink:affects
        object:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Object node category of this relationship edge.
          example: biolink:Protein
        relations:
          type: array
          description: >-
            Low-level relations from the underlying source.
          items:
            type: string
          example: [inhibits, activates]
        count:
          type: integer
          description: >-
            Total number of edge instances of this (subject, predicate,
            object) triple known to this KGX knowledge graph, or -1 if the
            number is not known.
        count_by_source:
          type: object
          description: >-
            Number of edge instances by their source.
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - subject
        - predicate
        - object
      additionalProperties: false
    RegisterGraphRequestBody:
      type: object
      description: >-
        KGE Knowledge Graph registration metadata.
      properties:
        translator_component:
          type: string
        translator_team:
          type: string
        kg_name:
          type: string
        kg_description:
          type: string
        license_name:
          type: string
        license_url:
          type: string
        terms_of_service:
          type: string
      required:
      - translator_component
      - translator_team
      - kg_name
    RegisterFileSetRequestBody:
      type: object
      description: >-
        Versioned KGE File Set registration metadata.
      properties:
        kg_id:
          type: string
        biolink_model_release:
          type: string
        fileset_major_version:
          type: integer
        fileset_minor_version:
          type: integer
        date_stamp:
          type: string
          format: date
      required:
      - kg_id
      - biolink_model_release
      - fileset_major_version
      - fileset_minor_version
      - date_stamp
    UploadRequestBody:
      description: Uploading form posting of (meta-)data files to a specific KGE File
        Set version, belonging to a specific Knowledge Graph. The 'upload_mode' argument
        specifies the category and/or mode as one of 'metadata', 'content_from_local_file'
        or 'content_from_url'. If 'metadata' or 'content_from_local_file' are indicated,
        then the 'uploaded_file' parameter should be set to the file to be uploaded.
        If 'upload_mode' is set to 'content_from_url' then the 'content_url' parameter
        is taken as a REST endpoint of the file to be transferred into the Archive
        (authentication not yet supported - URL should provide unauthenticated access).
        The 'content_name' should be set either to the file name of the 'metadata'
        or 'content_from_local_file', or url transfers, set by inference or as specified
        by the caller (especially if the 'content_url' doesn't resolve to a definitive
        file name). The specific KGX file content of the current upload file is set
        by the `kgx_file_content' for KGX data files uploaded in the 'content_from_local_file'
        or 'content_from_url' modes set by the selected 'nodes' versus 'edges' radio
        button.
      type: object
      properties:
        kg_id:
          type: string
        fileset_version:
          type: string
        kgx_file_content:
          type: string
        upload_mode:
          type: string
        content_name:
          type: string
        content_url:
          type: string
        uploaded_file:
          format: binary
          type: string
      required:
      - content_name
      - kg_id
      - fileset_version
      - kgx_file_content
      - upload_mode
