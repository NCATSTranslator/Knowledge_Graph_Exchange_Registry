openapi: 3.0.1
info:
  version: 0.0.1-dev
  title: >-
    OpenAPI for the NCATS Biomedical Translator
    Knowledge Graph EXchange (KGE) Archive
  description: >-
    OpenAPI for the NCATS Biomedical Translator
    Knowledge Graph Exchange Archive
  license:
    name: MIT 2.0
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: https://ncats.nih.gov/translator
  contact:
    name: "Richard Bruskiewich"
    x-role: "responsible developer"
    email: "richard.bruskiewich@delphinai.com"
    x-id: "https://github.com/RichardBruskiewich"
  x-translator:
    component: "SRI service"
    team:
    - "SRI"
servers:
  - url: "http://localhost:8080/archive"
    description: "Localhost URL for server, to be proxied to the real internet"
externalDocs:
  description: >-
    Documentation for the NCATS Biomedical Translator
    Knowledge Graph Exchange (KGE) Archive
  url: "https://github.com/NCATSTranslator/Knowledge_Graph_Exchange_Registry"
tags:
  - name: upload
    description: KGE file set upload form
  - name: provider
    description: Provider metadata for KGE file set
  - name: content
    description: Content metadata for KGX-formatted data files in a KGE file set.
  - name: translator
paths:
  /register:
    post:
      tags:
        - upload
      summary: Register core parameters for the KGE File Set upload
      operationId: registerFileSet
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                kg_name:
                  type: string
                kg_description:
                  type: string
                submitter:
                  type: string
                submitter_email:
                  type: string
                translator_component:
                  type: string
                translator_team:
                  type: string
                license_name:
                  type: string
                license_url:
                  type: string
                terms_of_service:
                  type: string
              required:
                - kg_name
                - translator_component
                - translator_team
                - submitter
                - submitter_email
            encoding:
              submitter:
                contentType: text/plain; charset=utf-8
              kg_name:
                contentType: text/plain; charset=utf-8
      responses:
        '201':
          description: Upload successfully completed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid somehow
            (not just unrecognized).
          content:
            application/json:
              schema:
                type: string
        '500':
          description: >-
            Internal server error.
          content:
            application/json:
              schema:
                type: string
        '501':
          description: >-
            Not implemented.
          content:
            application/json:
              schema:
                type: string
  /upload:
    post:
      tags:
        - upload
      summary: Upload processing of KGE File Set file
      operationId: uploadFile
      requestBody:
        description: KGE File Set metadata or data file submitted
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              description: >-
                Uploading form posting of (meta-)data files. The 'upload_mode'
                string argument specifies the file type and/or mode as one of
                'metadata', 'content_from_local_file' or 'content_from_url'. If
                'metadata' or 'content_from_local_file' are indicated, then the
                'uploaded_file' parameter should be set to the file to be
                uploaded. If 'upload_mode' is set to 'content_from_url'
                then the 'content_url' parameter is taken as a REST endpoint
                of the file to be transferred into the Archive (authentication
                not yet supported - URL should provide unauthenticated access).
                The 'content_name' should be set either to the file name of
                the 'metadata' or 'content_from_local_file', or for url transfers,
                set by inference or as specified by the caller (especially if
                the 'content_url' doesn't resolve to a definitive file name).
              properties:
                kg_id:
                  type: string
                upload_mode:
                  type: string
                content_url:
                  type: string
                content_name:
                  type: string
                uploaded_file:
                  type: string
                  format: binary
              required:
              - kg_id
              - content_name
              - upload_mode
            encoding:
              kg_id:
                contentType: text/plain; charset=utf-8
              upload_mode:
                contentType: text/plain; charset=utf-8
              content_url:
                contentType: text/plain; charset=utf-8
              uploaded_file: # Property name (see above)
                contentType: text/csv, text/tab-separated-values, text/json
      responses:
        '201':
          description: Upload successfully completed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid somehow
            (not just unrecognized).
          content:
            application/json:
              schema:
                type: string
        '500':
          description: >-
            Internal server error.
          content:
            application/json:
              schema:
                type: string
        '501':
          description: >-
            Not implemented.
          content:
            application/json:
              schema:
                type: string
  /publish/{kg_id}:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            KGE File Set identifier for the knowledge graph
            for which data files are being accessed.
          required: true
          schema:
            type: string
      tags:
      - upload
      summary: Publish a registered File Set
      operationId: publishFileSet
      responses:
        '302':
          description: >-
            After KGE File Set publication is triggered, user gets redirected to /home.
  /{kg_id}/access:
    get:
      parameters:
      - name: kg_id
        in: path
        description: >-
          KGE File Set identifier for the knowledge graph
          for which data files are being accessed
        required: true
        schema:
          type: string
      tags:
        - provider
      summary: Get KGE File Set provider metadata.
      operationId: access
      responses:
        '200':
          description: >-
            Name label of KGE File Set whose
            provider metadata is being reported
          content:
            application/json:
              schema:
                description: >-
                  Provider metadata describing the
                  location and inventory of KGE files
                type: object
                additionalProperties:
                  description: >-
                    Provider metadata attributes
                  $ref: '#/components/schemas/Attribute'
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR knowledge graph identifier is not just recognized.
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/meta_knowledge_graph:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            KGE File Set identifier for the knowledge graph
            for which data files are being accessed.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Meta knowledge graph representation of this KGX knowledge graph.
      operationId: metaKnowledgeGraph
      responses:
        '200':
          description: >-
            Returns meta knowledge graph representation
            of this KGX knowledge graph.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaKnowledgeGraph'
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR KGX knowledge graph identifier is not just unrecognized.
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    Attribute:
      type: object
      description: Generic metadata attribute.
      properties:
        type:
          type: string
          description: >-
            Type of the metadata attribute, from the Translator Registry metadata dictionary.
          example: "submitter"
        value:
          type: string
          description: >-
            Value of the attribute, encoded as a string.
          example: "Abraham Lincoln"
      required:
          - type
          - value
      additionalProperties: false
    BiolinkEntity:
      description: >-
        Compact URI (CURIE) for a Biolink class, biolink:NamedThing
        or a child thereof. The CURIE must use the prefix 'biolink:'
        followed by the PascalCase class name.
      type: string
      pattern: ^biolink:[A-Z][a-zA-Z]*$
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      example: biolink:PhenotypicFeature
    BiolinkPredicate:
      description: >-
        CURIE for a Biolink 'predicate' slot, taken from the Biolink slot
        ('is_a') hierarchy rooted in biolink:related_to (snake_case). This
        predicate defines the Biolink relationship between the subject and
        object nodes of a biolink:Association defining a knowledge graph edge.
      type: string
      pattern: ^biolink:[a-z][a-z_]*$
      externalDocs:
        description: Biolink model predicates
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      example: biolink:interacts_with
    MetaKnowledgeGraph:
      type: object
      description: >-
        Knowledge-map representation of this KGX knowledge graph.
      properties:
        nodes:
          type: object
          description: >-
            Collection of node categories provided by this KGX knowledge graph,
            indexed by Biolink class CURIEs.
          additionalProperties:
            $ref: '#/components/schemas/MetaNode'
        edges:
          type: array
          description: >-
            List of edges/predicates provided by this KGX knowledge graph.
          items:
            $ref: '#/components/schemas/MetaEdge'
          minItems: 1
    MetaNode:
      type: object
      description: >-
        Description of a node category provided by this KGX knowledge graph.
      properties:
        id_prefixes:
          type: array
          description: >-
            List of CURIE prefixes for the node category that this TRAPI web
            service understands and accepts on the input.
          items:
            type: string
          minItems: 1
          example: [CHEMBL.COMPOUND, INCHIKEY]
        count:
          type: integer
          description: >-
            Total number of node instances of this node category known to this
            KGX knowledge graph, or -1 if the number is not known.
        count_by_source:
          type: object
          description: >-
            Number of node instances by their source
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - id_prefixes
      additionalProperties: false
    MetaEdge:
      type: object
      description: >-
        Edge in a meta knowledge map describing relationship between a subject
        Biolink class and an object Biolink class.
      properties:
        subject:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Subject node category of this relationship edge.
          example: biolink:ChemicalSubstance
        predicate:
          $ref: '#/components/schemas/BiolinkPredicate'
          description: >-
            Biolink relationship between the subject and object categories.
          example: biolink:affects
        object:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Object node category of this relationship edge.
          example: biolink:Protein
        relations:
          type: array
          description: >-
            Low-level relations from the underlying source.
          items:
            type: string
          example: [inhibits, activates]
        count:
          type: integer
          description: >-
            Total number of edge instances of this (subject, predicate,
            object) triple known to this KGX knowledge graph, or -1 if the
            number is not known.
        count_by_source:
          type: object
          description: >-
            Number of edge instances by their source.
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - subject
        - predicate
        - object
      additionalProperties: false
