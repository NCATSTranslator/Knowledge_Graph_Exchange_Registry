openapi: 3.0.1
info:
  version: 1.0.0-dev
  title: >-
    OpenAPI for the Biomedical Translator Knowledge Graph EXchange Archive.
    Although this API is SmartAPI compliant, it will not normally be visible
    in the Translator SmartAPI Registry since it is mainly meant to be
    accessed through Registry indexed KGE File Sets, which will have
    distinct entries in the Registry.
  description: >-
    OpenAPI for the NCATS Biomedical Translator
    Knowledge Graph Exchange Archive
  license:
    name: MIT 2.0
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: https://ncats.nih.gov/translator
  contact:
    name: "Richard Bruskiewich"
    x-role: "responsible developer"
    email: "richard.bruskiewich@delphinai.com"
    x-id: "https://github.com/RichardBruskiewich"
  x-translator:
    component: "SRI service"
    team:
    - "SRI"
servers:
  - url: "http://localhost:8080/archive"
    description: "Localhost URL for server, to be proxied to the real internet"
externalDocs:
  description: >-
    Documentation for the NCATS Biomedical Translator
    Knowledge Graph Exchange (KGE) Archive
  url: "https://github.com/NCATSTranslator/Knowledge_Graph_Exchange_Registry"
tags:
  - name: translator
    description: Designates a NCATS Biomedical Data Translator component API
  - name: kge
    description: Designates a Translator Knowledge Graph eXchange (KGE) Archive API
  - name: catalog
    description: Endpoints to access catalog of KGE file sets
  - name: upload
    description: Endpoints for KGE file set upload
  - name: content
    description: Endpoints to access version specific KGE file set content (meta-)data.
paths:
  /catalog:
    get:
      tags:
      - catalog
      summary: Returns the catalog of available KGE File Sets
      operationId: getFileSetCatalog
      responses:
        '200':
          description: >-
            Catalog of available KGE File Sets, their name and their versions.
          content:
            application/json:
              schema:
                description: >-
                  Dictionary of available KGE File Sets, with a list of
                  (at least one) version. The keys of the dictionary are the
                  internal normalized identifiers ('kg_id') of the file sets.
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/KgeFileSetEntry'
  /register:
    post:
      tags:
        - catalog
      summary: Register core parameters for the KGE File Set upload
      operationId: registerFileSet
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                kg_name:
                  type: string
                kg_description:
                  type: string
                submitter:
                  type: string
                submitter_email:
                  type: string
                translator_component:
                  type: string
                translator_team:
                  type: string
                license_name:
                  type: string
                license_url:
                  type: string
                terms_of_service:
                  type: string
              required:
                - kg_name
                - translator_component
                - translator_team
                - submitter
                - submitter_email
            encoding:
              submitter:
                contentType: text/plain; charset=utf-8
              kg_name:
                contentType: text/plain; charset=utf-8
      responses:
        '201':
          description: Upload successfully completed.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid somehow
            (or not just recognized).
          content:
            application/json:
              schema:
                type: string
  /publish/{kg_id}:
    get:
      parameters:
      - name: kg_id
        in: path
        description: >-
          KGE File Set identifier for the knowledge graph
          for which data files are being accessed.
        required: true
        schema:
          type: string
      tags:
      - catalog
      summary: Publish a registered File Set
      operationId: publishFileSet
      responses:
        '302':
          description: >-
            After KGE File Set publication is triggered, user gets redirected to /home.
  /upload:
    post:
      tags:
        - upload
      summary: Upload processing of KGE File Set file
      operationId: uploadFile
      requestBody:
        description: KGE File Set metadata or data file submitted
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              description: >-
                Uploading form posting of (meta-)data files. The 'upload_mode'
                string argument specifies the category and/or mode as one of
                'metadata', 'content_from_local_file' or 'content_from_url'. If
                'metadata' or 'content_from_local_file' are indicated, then the
                'uploaded_file' parameter should be set to the file to be
                uploaded. If 'upload_mode' is set to 'content_from_url'
                then the 'content_url' parameter is taken as a REST endpoint
                of the file to be transferred into the Archive (authentication
                not yet supported - URL should provide unauthenticated access).
                The 'content_name' should be set either to the file name of
                the 'metadata' or 'content_from_local_file', or url transfers,
                set by inference or as specified by the caller (especially if
                the 'content_url' doesn't resolve to a definitive file name).
                The specific KGX file content of the current upload file is
                set by the `kgx_file_content' for KGX data files uploaded
                in the 'content_from_local_file' or 'content_from_url' modes
                set by the selected 'nodes' versus 'edges' radio button.
              properties:
                kg_id:
                  type: string
                kgx_file_content:
                  type: string
                upload_mode:
                  type: string
                content_name:
                  type: string
                content_url:
                  type: string
                uploaded_file:
                  type: string
                  format: binary
              required:
              - kg_id
              - kgx_file_content
              - upload_mode
              - content_name
            encoding:
              kg_id:
                contentType: text/plain; charset=utf-8
              kgx_file_content:
                contentType: text/plain; charset=utf-8
              upload_mode:
                contentType: text/plain; charset=utf-8
              content_url:
                contentType: text/plain; charset=utf-8
              content_name:
                contentType: text/plain; charset=utf-8
              uploaded_file: # Property name (see above)
                contentType: text/csv, text/tab-separated-values, text/json
      responses:
        '201':
          description: Upload successfully completed.
          content:
            application/json:
              schema:
                type: string
        '404':
          description: >-
            KGE File Set is unknown (not registered).
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI
            schema OR a specific parameter is believed to be invalid somehow
            (or not just recognized).
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{kg_version}/contents:
    get:
      parameters:
      - name: kg_id
        in: path
        description: >-
          KGE File Set identifier for the knowledge graph
          for which data file metadata are being accessed
        required: true
        schema:
          type: string
      - name: kg_version
        in: path
        description: >-
          Specific version of KGE File Set for the knowledge graph
          for which data file metadata are being accessed
        required: true
        schema:
          type: string
      tags:
        - content
      summary: Get file list and details for a specified KGE File Set version.
      operationId: getFileSetContents
      responses:
        '200':
          description: >-
            Annotated list of files of for a given version of a specified KGE File Set.
          content:
            application/json:
              schema:
                description: >-
                  Annotated list of file in a given KGE File Set version.
                type: array
                items:
                  $ref: '#/components/schemas/KgeFile'
        '404':
          description: >-
            Specified KGE File Set was not found.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI schema.
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{kg_version}/meta_knowledge_graph:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            KGE File Set identifier for the knowledge graph
            for which graph metadata is being accessed.
          required: true
          schema:
            type: string
        - name: kg_version
          in: path
          description: >-
            Version of KGE File Set for a given knowledge graph.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Meta knowledge graph representation of this KGX knowledge graph.
      operationId: metaKnowledgeGraph
      responses:
        '200':
          description: >-
            Returns meta knowledge graph representation
            of this KGX knowledge graph.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaKnowledgeGraph'
        '404':
          description: >-
            KGE File Set or its requested version was not found.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI schema
          content:
            application/json:
              schema:
                type: string
  /{kg_id}/{kg_version}/download:
    get:
      parameters:
        - name: kg_id
          in: path
          description: >-
            KGE File Set identifier for the knowledge graph being accessed.
          required: true
          schema:
            type: string
        - name: kg_version
          in: path
          description: >-
            Version of KGE File Set of the knowledge graph being accessed.
          required: true
          schema:
            type: string
      tags:
        - content
      summary: Returns specified KGE File Set as a gzip compressed tar archive
      operationId: downloadFileSet
      responses:
        '200':
          description: >-
            A KGE File Set as a gzip compressed tar archive of
            KGX compliant files plus an associated metadata json file
          content:
            application/gzip:
              schema:
                type: string
                format: binary
        '404':
          description: >-
            KGE File Set or its requested version was not found.
          content:
            application/json:
              schema:
                type: string
        '400':
          description: >-
            Bad request. Request is invalid according to this OpenAPI schema
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    KgeFileSetEntry:
      description: >-
        Basic KGE Archive catalog entry indexing a KGE File Set.
      type: object
      properties:
        name:
          description: Human readable KGE File Set name ('kg_name')
          type: string
          example: "Semantic Medline Database"
        versions:
          description: List of versions ('kg_version') of a KGE File Set
          type: array
          items:
            type: string
          minItems: 1
          example: ["4.1", "4.2", "4.3"]
    KgeFile:
      description: >-
        Annotated file in a KGE File Set.
      type: object
      properties:
        file_name:
          description: original name of file (as uploaded)
          type: string
        file_type:
          description: designates if the file is meta-, node or edge data
          type: string
        file_size:
          description: size of file in megabytes
          type: number
          format: float
    BiolinkEntity:
      description: >-
        Compact URI (CURIE) for a Biolink class, biolink:NamedThing
        or a child thereof. The CURIE must use the prefix 'biolink:'
        followed by the PascalCase class name.
      type: string
      pattern: ^biolink:[A-Z][a-zA-Z]*$
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      example: biolink:PhenotypicFeature
    BiolinkPredicate:
      description: >-
        CURIE for a Biolink 'predicate' slot, taken from the Biolink slot
        ('is_a') hierarchy rooted in biolink:related_to (snake_case). This
        predicate defines the Biolink relationship between the subject and
        object nodes of a biolink:Association defining a knowledge graph edge.
      type: string
      pattern: ^biolink:[a-z][a-z_]*$
      externalDocs:
        description: Biolink model predicates
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      example: biolink:interacts_with
    MetaKnowledgeGraph:
      type: object
      description: >-
        Knowledge-map representation of this KGX knowledge graph.
      properties:
        nodes:
          type: object
          description: >-
            Collection of node categories provided by this KGX knowledge graph,
            indexed by Biolink class CURIEs.
          additionalProperties:
            $ref: '#/components/schemas/MetaNode'
        edges:
          type: array
          description: >-
            List of edges/predicates provided by this KGX knowledge graph.
          items:
            $ref: '#/components/schemas/MetaEdge'
          minItems: 1
    MetaNode:
      type: object
      description: >-
        Description of a node category provided by this KGX knowledge graph.
      properties:
        id_prefixes:
          type: array
          description: >-
            List of CURIE prefixes for the node category that this TRAPI web
            service understands and accepts on the input.
          items:
            type: string
          minItems: 1
          example: [CHEMBL.COMPOUND, INCHIKEY]
        count:
          type: integer
          description: >-
            Total number of node instances of this node category known to this
            KGX knowledge graph, or -1 if the number is not known.
        count_by_source:
          type: object
          description: >-
            Number of node instances by their source
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - id_prefixes
      additionalProperties: false
    MetaEdge:
      type: object
      description: >-
        Edge in a meta knowledge map describing relationship between a subject
        Biolink class and an object Biolink class.
      properties:
        subject:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Subject node category of this relationship edge.
          example: biolink:ChemicalSubstance
        predicate:
          $ref: '#/components/schemas/BiolinkPredicate'
          description: >-
            Biolink relationship between the subject and object categories.
          example: biolink:affects
        object:
          $ref: '#/components/schemas/BiolinkEntity'
          description: >-
            Object node category of this relationship edge.
          example: biolink:Protein
        relations:
          type: array
          description: >-
            Low-level relations from the underlying source.
          items:
            type: string
          example: [inhibits, activates]
        count:
          type: integer
          description: >-
            Total number of edge instances of this (subject, predicate,
            object) triple known to this KGX knowledge graph, or -1 if the
            number is not known.
        count_by_source:
          type: object
          description: >-
            Number of edge instances by their source.
          additionalProperties:
            type: integer
          example:
            ChEMBL: 1234
      required:
        - subject
        - predicate
        - object
      additionalProperties: false
